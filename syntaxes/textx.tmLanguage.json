{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "textX",
	"patterns": [{
			"include": "#keyword"
		},
		{
			"include": "#constant"
		},
		{
			"include": "#support"
		},
		{
			"include": "#comment"
		},
		{
			"include": "#string"
		},
		{
			"include": "#meta"
		}
	],
	"repository": {
		"keyword": {
			"patterns": [{
					"include": "#operator"
				},
				{
					"include": "#assignment"
				}
			],
			"repository": {
				"operator": {
					"patterns": [{
						"name": "keyword.operator.textx",
						"match": "(\\||\\?|\\*|\\+|#|\\!|\\&|\\(|\\))"
					}]
				},
				"assignment": {
					"patterns": [{
						"name": "keyword.operator.assignment.textx",
						"match": "(\\?=|\\*=|\\+=|=)"
					}]
				}
			}
		},
		"constant": {
			"patterns": [{
					"name": "constant.language.textx",
					"match": "(true|false|eolterm)"
				}
			]
		},
		"string": {
			"patterns": [{
					"include": "#double-quoted"
				},
				{
					"include": "#single-quoted"
				},
				{
					"include": "#regexp"
				}
			],
			"repository": {
				"double-quoted": {
					"patterns": [{
						"name": "string.quoted.double.textx",
						"begin": "\"",
						"end": "\"",
						"patterns": [{
							"include": "#escape-character"
						}]
					}]
				},
				"single-quoted": {
					"patterns": [{
						"name": "string.quoted.single.textx",
						"begin": "'",
						"end": "'",
						"patterns": [{
							"include": "#escape-character"
						}]
					}]
				},
				"regexp": {
					"patterns": [{
						"name": "string.regexp.textx",
						"match": "\\/[^\\*\\+\\?\\s]*.+\\/"
					}]
				},
				"escape-character": {
					"patterns": [{
						"name": "constant.character.escape.textx",
						"match": "\\\\."
					}]
				}
			}
		},
		"support": {
			"patterns": [{
				"name": "support.type.basetype.textx",
				"comment": "Basetypes provided by the framework",
				"match": "(BASETYPE|NUMBER|INT|FLOAT|STRING|BOOL|ID)"
			}]
		},
		"comment": {
			"patterns": [{
					"include": "#line-comment"
				},
				{
					"include": "#block-comment"
				}
			],
			"repository": {
				"line-comment": {
					"patterns": [{
						"name": "comment.line.double-slash.textx",
						"match": "\\/\\/.*$"
					}]
				},
				"block-comment": {
					"patterns": [{
						"name": "comment.block.textx",
						"begin": "\\/\\*",
						"end": "\\*\\/"
					}]
				}
			}
		},
		"meta": {
			"patterns": [{
				"include": "#entity"
			}],
			"repository": {
				"entity": {
					"patterns": [{
						"name": "meta.entity.textx",
						"comment": "Definition of an entity",
						"begin": "(\\w+):(\\s|\\/\\/|\\/\\*)?",
						"beginCaptures": {
							"1": {
								"name": "entity.name.entity.textx"
							}
						},
						"end": ";(\\s|\\/\\/|\\/\\*)?",
						"patterns": [{
								"include": "#comment"
							},
							{
								"include": "#string"
							},
							{
								"include": "#property"
							},
							{
								"include": "#optional-property"
							},
							{
								"include": "#repetition-property"
							}
						]
					}],
					"repository": {
						"property": {
							"patterns": [{
								"name": "meta.property.textx",
								"comment": "A property within an entity",
								"match": "(\\w+)?\\s?(=|\\+=|\\*=)\\s?(\\w+|\\[(\\w+(\\|\\w+)*)\\]|\\((\\w+(\\|\\w+)*)\\))",
								"captures": {
									"1": {
										"name": "entity.name.property.textx"
									},
									"2": {
										"name": "keyword.operator.assignment.textx"
									},
									"3": {
										"name": "storage.type.property.textx",
										"patterns": [{
												"name": "keyword.operator.reference.open.squarebracket.textx",
												"match": "\\["
											},
											{
												"name": "keyword.operator.reference.closed.squarebracket.textx",
												"match": "\\]"
											},
											{
												"name": "storage.type.property.name.textx",
												"match": "\\w+"
											},
											{
												"name": "keyword.operator.ordered-choice.textx",
												"match": "\\|"
											},
											{
												"name": "keyword.operator.bracket.open.textx",
												"match": "\\("
											},
											{
												"name": "keyword.operator.bracket.closed.textx",
												"match": "\\)"
											}
										]
									}
								}
							}]
						},
						"optional-property": {
							"patterns": [
								{
									"name": "meta.property.optional.textx",
									"begin": "(\\()",
									"beginCaptures": {
										"1": {
											"name": "keyword.operator.bracket.open.textx"
										}
									},
									"end": "(\\))(\\?)",
									"endCaptures": {
										"1": {
											"name": "keyword.operator.bracket.closed.textx"
										},
										"2": {
											"name": "keyword.operator.optional.textx"
										}
									},
									"patterns": [
										{
											"include": "#property"
										}
									]
								}
							]
						},
						"repetition-property": {
							"patterns": [
								{
									"name": "meta.property.repetition.textx",
									"begin": "(\\()",
									"beginCaptures": {
										"1": {
											"name": "keyword.operator.bracket.open.textx"
										}
									},
									"end": "(\\))(\\*|\\+)",
									"endCaptures": {
										"1": {
											"name": "keyword.operator.bracket.closed.textx"
										},
										"2": {
											"name": "keyword.operator.repetition.textx"
										}
									},
									"patterns": [
										{
											"include": "#property"
										}
									]
								}
							]
						}
					}
				}
			}
		}
	},
	"scopeName": "source.textx"
}